{
    "summary": "The code tests USB devices with specific manufacturer strings, using HID API to interact by printing device information, writing and reading data, and closing the connection. However, it may require adjustments for certain devices due to hard-coded paths.",
    "details": [
        {
            "comment": "Enumerating USB devices with specified manufacturer string, comparing expected devices, and attempting to open a device for further operations.",
            "location": "\"/media/root/Toshiba XG3/works/cybergod_doc/src/hardware_capture_hid_power_control/test_hidraw.py\":0-40",
            "content": "# deprecated. use serial for both controllers\nfrom __future__ import print_function\nimport hid\nimport time\n# enumerate USB devices\n# manufacturer_string -> \"winkeyless.kr\"\n# shall be what we expect.\nfor d in hid.enumerate():\n    keys = list(d.keys())\n    keys.sort()\n    for key in keys:\n        print(\"%s : %s\" % (key, d[key]))\n    print()\ndevices = {\n    0: {\n        \"vendor_id\": 8352,\n        \"product_id\": 16941,\n    },  # 0, could be mouse.\n    1: {\n        \"vendor_id\": 8352,\n        \"product_id\": 16941,\n    },  # 1\n}\n# the same!\n# try opening a device, then perform write and read\n# may you write keyboard and mouse commands to different devices, by using `h.open(d)` (may still be the same as below)\nh = hid.device()\ntry:\n    print(\"Opening the device\")\n    h.open(devices[0][\"vendor_id\"], devices[0][\"product_id\"])\n    # h.open(0x534C, 0x0001)  # TREZOR VendorID/ProductID\n    # print(dir(h))\n    # 'get_feature_report', 'get_indexed_string', 'get_input_report', 'get_manufacturer_string', 'get_product_string', 'get_seri"
        },
        {
            "comment": "This code tests the interaction with a USB device using HID API. It prints manufacturer, product, and serial number. Writes data to the device, waits for response, reads back the data, and closes the device connection. Code may require adjustment for specific devices as it uses hard-coded device path.",
            "location": "\"/media/root/Toshiba XG3/works/cybergod_doc/src/hardware_capture_hid_power_control/test_hidraw.py\":40-79",
            "content": "al_number_string',\n    # print(h.open_path)\n    print(\"Manufacturer: %s\" % h.get_manufacturer_string())\n    print(\"Product: %s\" % h.get_product_string())\n    print(\"Serial No: %s\" % h.get_serial_number_string())\n    # enable non-blocking mode\n    h.set_nonblocking(1)\n    # write some data to the device\n    # what data is this anyway?\n    print(\"Write the data\")\n    h.write([0, 63, 35, 35] + [0] * 61)\n    # wait\n    time.sleep(0.05)\n    # read back the answer\n    print(\"Read the data\")\n    while True:\n        d = h.read(64)\n        if d:\n            print(d)\n        else:\n            break\n    print(\"Closing the device\")\n    h.close()\nexcept IOError as ex:\n    print(ex)\n    print(\"hid error:\")\n    print(h.error())\n    print(\"\")\n    print(\"You probably don't have the hard-coded device.\")\n    print(\"Update the h.open() line in this script with the one\")\n    print(\"from the enumeration list output above and try again.\")\nprint(\"Done\")"
        }
    ]
}